### ESTÁGIO 1: Build com Maven
# Usa uma imagem oficial que já vem com Maven e JDK para compilar a aplicação
FROM maven:3.9-eclipse-temurin-21 AS build

# Define o diretório de trabalho dentro do container
WORKDIR /app

# Otimização de Cache: Copia apenas os arquivos de definição do projeto primeiro
COPY pom.xml .
COPY .mvn .mvn
COPY mvnw .
COPY mvnw.cmd .

# Otimização de Cache: Baixa todas as dependências do projeto.
# Como as dependências mudam com menos frequência que o código,
# esta camada ficará no cache do Docker, acelerando builds futuros.
RUN mvn dependency:go-offline -B

# Agora, copia o resto do código-fonte
COPY src ./src

# Finalmente, compila o projeto e cria o fast-jar, pulando os testes.
RUN mvn package -B -Dquarkus.package.type=fast-jar -DskipTests


### ESTÁGIO 2: Imagem final de execução
# Usa a imagem base recomendada pelo Quarkus (UBI Minimal), que é otimizada e segura.
FROM registry.access.redhat.com/ubi9/openjdk-21:1.23

# Define o usuário 'jboss' (ID 185) para rodar a aplicação, por segurança
USER 185

# Define o diretório de trabalho final
WORKDIR /deployments

# Copia APENAS os artefatos compilados do estágio 'build' para a imagem final
# O --chown garante que o usuário 'jboss' tenha permissão nos arquivos
COPY --from=build --chown=185:0 /app/target/quarkus-app/ .

# Expõe a porta padrão do Quarkus (a Render irá sobrescrever com a porta correta)
EXPOSE 8080

# Comando final para iniciar a aplicação Java
CMD ["java", "-jar", "quarkus-run.jar"]
